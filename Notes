                                                  SpringBoot
概念:一种全新的框架,用于简化Spring的初始搭建以及开发过程

使用SpringBoot开发,只需要我们写好controller就可以了(前提是我们通过SpringInitializer创建SpringWeb项目)
(注意,创建SpringBoot项目需要联网,因为我们在idea里创建的boot项目实际上就是间接在网上创建的,所以我们也可以在Spring官网里直接创建SpringBoot项目)

最简SpringBoot程序所包含的基础文件
  *pom.xml文件   (继承与SpringBoot依赖)
  *Application类   (引导类)

---------------------------------------------------------------------------------------------------------------------------
                                          SpringBoot程序快速启动
概念:后端人员所开发的服务器如果前端人员想进行调用必须让后端程序员打开服务器,非常麻烦.所以SpringBoot可以实现将该后端项目打包成jar包传给前端
     人员,前端人员只需在需要放置jar的位置使用cmd命令java -jar jar包的名称即可
         (注意:普通的Maven项目打包成的jar包无法直接使用java命令,只有SpringBoot项目可以)
---------------------------------------------------------------------------------------------------------------------------
                                              起步依赖(Starter)
->在pom.xml文件中继承了spring-boot-starter-parent的父工程,而该工程又继承了spring-boot-dependencies复工程,该父工程里包含了所有我们
  需要的各种坐标版本,并默认了初始版本以及版本管理(减少版本冲突),从而使我们不再需要手动定义坐标版本

  同时,引入了spring-boot-starter-test坐标,在该坐标里定义了很多我们需要用到起始的依赖,使得我们不需要再引入很多依赖
         (比如我们之前SpringMvc配置的类就通过SpringWeb这个起始依赖实现,同时还内置了Tomcat服务器)
---------------------------------------------------------------------------------------------------------------------------
                                               基本配置
                            在SpringBoot项目中配置文件统一格式为application.xxx)
1.修改端口号的方式(均在resource里配置)
->直接在application.properties文件里配置server.port=自定义端口号   (优先级最高)
->创建application.yml文件,在里面配置port (主流推荐!!!!!!!!!!!!!)
->创建application.yaml文件,在里面配置port
yml/yaml:一种文件语言,和properties文件类似,可以存放键值对,不过语法书写更简洁

yml/yaml语法规则:缩进代表层级,冒号后面一定要加一个空格
    数组的表示方式->  hobby:
                     - 唱
                     - 跳
                     - rap
                     - 篮球

获取值的操作:
1.和properties一样,使用@Value(${键名})注解即可
2.创建Environment类对象,并在变量上方添加@Autowire注解,SpringBoot会将yml文件里的所有信息传入该对象中,后面只需要调用对象的
   getProperties("键名")方法即可
3.定义一个实体类,根据需要获取的值的键名创建对应的实体类,在实体类上方添加@Component和@ConfigurationProperties(prefix="键名"),
  定义好后,Spring在加载容器时会将properties里的键和值拿走,一对一的装入对应的实体类里封装成bean,我们想取走数据时只需要创建实体类对象,
  并且添加上@Autowire自动装配即可
---------------------------------------------------------------------------------------------------------------------------
                                        SpringBoot多环境启动
->即如何实现在配置文件中设置多环境,保证在不同的环境下不需要重新修改配置

具体实现:
在yml/yaml文件里,添加开发环境配置 spring:                          并配置默认环境  spring:
                                   profiles:  //具体的环境                        profiles:
                                server:                                            active: //填写需要默认的环境
                                   port:      //具体的环境参数
                              ---    //每配置完一个环境记得在下面加"---"来区分
                          (注意:配置环境的语句一定要写在键值对下面,不然无法识别键值对)

多环境启动命令
->后端程序员将boot项目jar包传给前端人员时,因为后端一般用的是开发环境(dev),前端人员需要的是测试环境(test),所以前端人员需要使用指令对jar包
  里的环境进行切换
 实现:在jar包的文件位置启动cmd,输入指令java -jar boot的jar包全称 --spring.profiles.active=test  //即修改环境为测试环境
                                                          --spring.port=xxxx       //即表示修改端口为...